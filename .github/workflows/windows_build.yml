name: windows_build

on:
  push:
    branches:
      - $default-branch
  pull_request:
    branches:
      - $default-branch

env:
  UNUSED_VAR: "This variable is unused, but is here to demonstrate how to set environment variables in a workflow"

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: "windows-latest"

    steps:
      - uses: actions/checkout@v3
      - name: Download VulkanSDK-1.3.243.0
        run: |
          curl -O https://sdk.lunarg.com/sdk/download/1.3.243.0/windows/VulkanSDK-1.3.243.0-Installer.exe
          .\VulkanSDK-1.3.243.0-Installer.exe --accept-licenses --default-answer --confirm-command install
          curl https://raw.githubusercontent.com/GPUOpen-LibrariesAndSDKs/VulkanMemoryAllocator/v3.0.1/include/vk_mem_alloc.h --create-dirs -o "C:\VulkanSDK\1.3.243.0\Include\vma\vk_mem_alloc.h"
          curl https://raw.githubusercontent.com/zeux/volk/sdk-1.3.243.0/volk.h --create-dirs -o "C:\VulkanSDK\1.3.243.0\Include\volk\volk.h"
          curl https://raw.githubusercontent.com/zeux/volk/sdk-1.3.243.0/volk.c --create-dirs -o "C:\VulkanSDK\1.3.243.0\Include\volk\volk.c"
      - name: Download Python-3.11.4
        run: |
          curl -O https://www.python.org/ftp/python/3.11.4/python-3.11.4-amd64.exe
          .\python-3.11.4-amd64.exe /passive

      - name: Check version
        run: |
          python --version
          cmake --version

      - name: Build with clang/clang++
        run: |
          setx VK_SDK_PATH "C:\VulkanSDK\1.3.243.0"
          cmake -B Build_clang -G "Ninja Multi-Config" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          cmake --build Build_clang --config Release -- -j8
          cmake --build Build_clang --config Debug -- -j8

      - name: Build with MSVC
        run: |
          setx VK_SDK_PATH "C:\VulkanSDK\1.3.243.0"
          cmake -B Build_msvc -G "Visual Studio 17 2022"
          cmake --build Build_msvc --config Release
          cmake --build Build_msvc --config Debug

    #- name: Test
    # working-directory: ${{github.workspace}}/build
    ## Execute tests defined by the CMake configuration.
    ## See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #run: ctest -C ${{env.BUILD_TYPE}}
