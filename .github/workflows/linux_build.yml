name: linux_build

on:
  push:
    branches: ["ci-debug"]
  pull_request:
    branches: ["ci-debug"]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Download vulkan SDK
        working-directory: ${{github.workspace}}../
        run: |
          pwd
          wget -q https://sdk.lunarg.com/sdk/download/1.3.243.0/linux/vulkansdk-linux-x86_64-1.3.243.0.tar.gz
          tar -xf vulkansdk-linux-x86_64-1.3.243.0.tar.gz --quiet
          source 1.3.243.0/setup-env.sh

      - name: Install required packages
        run: |
          pwd
          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install python3
          sudo apt-get install cmake
          sudo apt-get install ninja-build
          sudo apt-get install clang
          sudo apt-get install gcc
          sudo apt-get install g++

      - name: Configure execution permission
        run: chmod +x Tools/Linux/*

      - name: Check version
        run: |
          lsb_release -a
          python3 --version
          cmake --version
          ninja --version
          clang --version
          gcc --version
          vulkaninfo

      - name: Build with clang/clang++
        working-directory: ${{github.workspace}}
        run: |
          pwd
          cmake -B Build_clang -G "Ninja Multi-Config" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++
          cmake --build Build_clang --config Release -- -j8
          cmake --build Build_clang --config Debug -- -j8

      - name: Build with gcc/g++
        working-directory: ${{github.workspace}}
        run: |
          pwd
          cmake -B Build_gcc -G "Ninja Multi-Config" -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++
          cmake --build Build_gcc --config Release -- -j8
          cmake --build Build_gcc --config Debug -- -j8

    #- name: Test
    # working-directory: ${{github.workspace}}/build
    ## Execute tests defined by the CMake configuration.
    ## See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #run: ctest -C ${{env.BUILD_TYPE}}
